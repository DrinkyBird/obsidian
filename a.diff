diff --git a/meson.build b/meson.build
index ea98920..3a95def 100644
--- a/meson.build
+++ b/meson.build
@@ -34,6 +34,15 @@ configure_file(input: 'settings.ini', output: 'settings.ini', copy: true)
 
 if build_machine.system() == 'windows'
     deps += cc.find_library('ws2_32')
+
+    src += [
+        'src/win32/win_err.c',
+        'src/win32/win_main.c'
+    ]
+elif build_machine.system() == 'linux'
+    src += [
+        'src/posix/posix_err.c'
+    ]
 endif
 
 executable('miniclassic', src, dependencies: deps, c_args: cflags)
\ No newline at end of file
diff --git a/src/connection.c b/src/connection.c
index 41b1269..09b2d70 100644
--- a/src/connection.c
+++ b/src/connection.c
@@ -98,14 +98,16 @@ void connection_tick(connection_t *conn) {
     if (len == -1) {
         free(buf);
 
-        if (errno == EAGAIN || errno == EWOULDBLOCK) {
+        int e = sock_error();
+
+        if (e == SOCKERR_EAGAIN || e == SOCKERR_EWOULDBLOCK) {
             /* no data */
             return;
         }
 
         conn->fd_open = false;
 
-        if (errno == ECONNRESET || errno == EPIPE) {
+        if (e == ECONNRESET || e == EPIPE) {
             connection_disconnect(conn, "Client quit");
             return;
         }
@@ -330,13 +332,15 @@ void connection_flush_out(connection_t *conn) {
     rw_seek(conn->out_rw, 0, rw_set);
 
     if (l == -1) {
-        if (errno == EAGAIN || errno == EWOULDBLOCK) {
+        int e = sock_error();
+
+        if (e == SOCKERR_EAGAIN || e == SOCKERR_EWOULDBLOCK) {
             return;
         }
 
         conn->fd_open = false;
 
-        if (errno == ECONNRESET || errno == EPIPE) {
+        if (e == ECONNRESET || e == EPIPE) {
             connection_disconnect(conn, "Client quit");
             return;
         }
diff --git a/src/listener.c b/src/listener.c
index a6b6ca3..0a6c28e 100644
--- a/src/listener.c
+++ b/src/listener.c
@@ -30,7 +30,7 @@ listener_t *listener_create(uint16_t port, int num_conns) {
     err = (listener->socket_fd = socket(AF_INET, SOCK_STREAM, 0));
 
     if (err == -1) {
-        perror("socket");
+        sock_perror("socket");
         return NULL;
     }
 
@@ -42,19 +42,19 @@ listener_t *listener_create(uint16_t port, int num_conns) {
     int yes = 1;
     err = setsockopt(listener->socket_fd, SOL_SOCKET, SO_REUSEADDR, &yes, sizeof(yes));
     if (err == -1) {
-        perror("setsockopt(SO_REUSEADDR)");
+        sock_perror("setsockopt(SO_REUSEADDR)");
         return NULL;
     }
 
     err = bind(listener->socket_fd, (struct sockaddr *)&server_addr, sizeof(server_addr));
     if (err == -1) {
-        perror("bind");
+        sock_perror("bind");
         return NULL;
     }
 
     err = listen(listener->socket_fd, BACKLOG);
     if (err == -1) {
-        perror("listen");
+        sock_perror("listen");
         return NULL;
     }
 
@@ -87,12 +87,13 @@ void listener_accept(listener_t *listener) {
 
     int acceptfd = accept(listener->socket_fd, (struct sockaddr *)&client_addr, &addr_size);
     if (acceptfd == -1) {
-        if (errno == EAGAIN || errno == EWOULDBLOCK) {
+        int e = sock_error();
+        if (e == SOCKERR_EAGAIN || e == SOCKERR_EWOULDBLOCK) {
             /* no incoming connections */
             return;
         }
 
-        perror("accept");
+        sock_perror("accept");
         return;
     }
 
diff --git a/src/main.c b/src/main.c
index e0e80d8..c86f5f3 100644
--- a/src/main.c
+++ b/src/main.c
@@ -12,6 +12,7 @@
 #include "map.h"
 #include "heartbeat.h"
 #include "config.h"
+#include "platform.h"
 
 #define IS_OPT(n) (strcmp(long_options[option_index].name, n) == 0) 
 
@@ -55,6 +56,8 @@ int main(int argc, char *argv[]) {
     }
 
     srand(time(NULL));
+    
+    platform_init();
 
     int width = configuration->width;
     int depth = configuration->depth;
@@ -91,6 +94,8 @@ int main(int argc, char *argv[]) {
     heartbeat_shutdown();
 #endif
 
+    platform_shutdown();
+
     return 0;
 }
 
diff --git a/src/platform.h b/src/platform.h
index 0171d3f..c30101e 100644
--- a/src/platform.h
+++ b/src/platform.h
@@ -7,4 +7,10 @@
 #include "posix/posix_platform.h"
 #endif
 
+int sock_error();
+void sock_perror(const char *s);
+
+void platform_init();
+void platform_shutdown();
+
 #endif
\ No newline at end of file
diff --git a/src/win32/win_platform.h b/src/win32/win_platform.h
index addbf19..696eccd 100644
--- a/src/win32/win_platform.h
+++ b/src/win32/win_platform.h
@@ -6,4 +6,7 @@
 
 typedef SOCKET socket_t;
 
+#define SOCKERR_EAGAIN 0
+#define SOCKERR_EWOULDBLOCK WSAEWOULDBLOCK
+
 #endif
\ No newline at end of file
